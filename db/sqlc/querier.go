// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package db

import (
	"context"
)

type Querier interface {
	AddAccountBalance(ctx context.Context, arg AddAccountBalanceParams) (Account, error)
	CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error)
	CreateEntry(ctx context.Context, arg CreateEntryParams) (Entry, error)
	CreateTransfer(ctx context.Context, arg CreateTransferParams) (Transfer, error)
	DeleteAccount(ctx context.Context, id int64) error
	GetAccount(ctx context.Context, id int64) (Account, error)
	GetAccountForUpdate(ctx context.Context, id int64) (Account, error)
	GetEntry(ctx context.Context, id int64) (Entry, error)
	GetTransfer(ctx context.Context, id int64) (Transfer, error)
	ListAccounts(ctx context.Context, arg ListAccountsParams) ([]Account, error)
	ListEntries(ctx context.Context, arg ListEntriesParams) ([]Entry, error)
	ListTransfers(ctx context.Context, arg ListTransfersParams) ([]Transfer, error)
	UpdateAccount(ctx context.Context, arg UpdateAccountParams) (Account, error)
}

// q: what does this following line of code mean
// A: it means that the Queries struct implements the Querier interface
//    and that the Queries struct is the only thing that implements the Querier interface	
// q: why would I need such a thing?
// A: you need this because you want to be able to mock the Querier interface

// q: var _ means?
// A: it means that we are not using the variable, but we are using the type

// q: I don't under stand the structure of code of the following line
// A: the following line of code is a type assertion
//    it is saying that the Queries struct implements the Querier interface

// q: what is the purpose of the following line of code
// A: the purpose of the following line of code is to make sure that the Queries struct implements the Querier interface

// q: so a struct can implement an interface?
// A: yes, a struct can implement an interface

// q: what's main use of struct and interface?
// A: struct is used to define data structure
//    interface is used to define behavior

// q: can interface implements another interface?
// A: yes, interface can implement another interface

// q: can struct implements another struct?
// A: no, struct can not implement another struct

var _ Querier = (*Queries)(nil)
